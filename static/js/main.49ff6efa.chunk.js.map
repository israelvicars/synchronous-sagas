{"version":3,"sources":["constants/types.js","actions/bucket.js","components/App/index.js","serviceWorker.js","reducers/bucket.js","reducers/index.js","sagas/bucket.js","sagas/index.js","index.js"],"names":["INCREMENT_ALFA","INCREMENT_BRAVO","incrementCharlie","type","incrementDelta","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","bind","assertThisInitialized","console","log","setTimeout","incrementAlfa","incrementBravo","bucket","react_default","a","createElement","className","onClick","href","alfa","bravo","charlie","delta","Component","connect","_ref","Boolean","window","location","hostname","match","INITIAL","combineReducers","state","arguments","length","undefined","objectSpread","bucketSaga","acknowledgeAlfa","acknowledgeBravo","regenerator_default","wrap","_context","prev","next","all","takeEvery","stop","_marked","action","_context2","select","sent","put","_marked2","_context3","_marked3","rootSaga","sagas_marked","__webpack_require__","d","__webpack_exports__","store","sagaMiddleware","createSagaMiddleware","applyMiddleware","createStore","createStoreWithMiddleware","reducers","__REDUX_DEVTOOLS_EXTENSION__","run","ReactDOM","render","es","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.49ff6efa.chunk.js","sourcesContent":["export const INCREMENT_ALFA    = 'INCREMENT_ALFA';\nexport const INCREMENT_BRAVO   = 'INCREMENT_BRAVO';\nexport const INCREMENT_CHARLIE = 'INCREMENT_CHARLIE';\nexport const INCREMENT_DELTA   = 'INCREMENT_DELTA';\n","import {\n  INCREMENT_ALFA,\n  INCREMENT_BRAVO,\n  INCREMENT_CHARLIE,\n  INCREMENT_DELTA\n} from '../constants/types';\n\nexport const incrementAlfa = () => {\n  return {\n    type : INCREMENT_ALFA\n  }\n}\n\nexport const incrementBravo = () => {\n  return {\n    type : INCREMENT_BRAVO\n  }\n}\n\nexport const incrementCharlie = () => {\n  return {\n    type : INCREMENT_CHARLIE\n  }\n}\n\nexport const incrementDelta = () => {\n  return {\n    type : INCREMENT_DELTA\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './App.css';\n\nimport { incrementAlfa, incrementBravo, incrementCharlie, incrementDelta } from '../../actions';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    console.log(\"handle increment alfa\");\n    setTimeout( () => console.log('handle increment alfa after 0'), 0);\n    this.props.incrementAlfa();\n    console.log(\"handle increment bravo\");\n    setTimeout( () => console.log('handle increment bravo after 0'), 0);\n    this.props.incrementBravo();\n    console.log(\"all increments handled\");\n    setTimeout( () => console.log('all increments handled after 0'), 0);\n  }\n\n  render() {\n\n    const { bucket } = this.props;\n\n    return (\n      <div className=\"App\">\n        <button onClick = { this.handleClick }>BIG RED BUTTON</button>\n        <div>\n          <p>Just open up the console and then click the big red button. Code is in the usual\n          spot at <a href = 'https://github.com/thomasoniii/synchronous-saga'>github.</a></p>\n          <ul>\n            <li>Alfa : { bucket.alfa }</li>\n            <li>Bravo : { bucket.bravo }</li>\n            <li>Charlie : { bucket.charlie }</li>\n            <li>Delta : { bucket.delta }</li>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({bucket}) => {\n  return {\n    bucket\n  }\n};\n\nexport default connect(mapStateToProps, { incrementAlfa, incrementBravo, incrementCharlie, incrementDelta })(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  INCREMENT_ALFA,\n  INCREMENT_BRAVO,\n  INCREMENT_CHARLIE,\n  INCREMENT_DELTA\n} from '../constants/types';\n\nconst INITIAL = {\n  alfa    : 0,\n  bravo   : 0,\n  charlie : 0,\n  delta   : 0\n};\n\nexport default (state = INITIAL, action) => {\n  switch (action.type) {\n    case INCREMENT_ALFA :\n      console.log(\"increments alfa\");\n      return { ...state, alfa : state.alfa + 1 }\n    case INCREMENT_BRAVO :\n      console.log(\"increments bravo\");\n      return { ...state, bravo : state.bravo + 1 }\n    case INCREMENT_CHARLIE :\n      console.log(\"increments charlie\");\n      return { ...state, charlie : state.charlie + 1 }\n    case INCREMENT_DELTA :\n      console.log(\"increments delta\");\n      return { ...state, delta : state.delta + 1 }\n    default :\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\n\nimport bucket from './bucket';\n\nexport default combineReducers({\n  bucket,\n});\n","import { all, put, takeEvery, select } from 'redux-saga/effects';\n\nimport {\n  INCREMENT_ALFA,\n  INCREMENT_BRAVO,\n} from '../constants/types';\n\nimport {\n  incrementCharlie,\n  incrementDelta\n} from '../actions';\n\nexport default function* bucketSaga() {\n  yield all([\n    takeEvery( INCREMENT_ALFA,  acknowledgeAlfa ),\n    takeEvery( INCREMENT_BRAVO, acknowledgeBravo ),\n  ])\n}\n\n\nfunction* acknowledgeAlfa(action) {\n  const state = yield select();\n  console.log('state in acknowledge alfa is : ', state);\n  yield put( incrementCharlie() );\n}\n\nfunction* acknowledgeBravo(action) {\n  const state = yield select();\n  console.log('state in acknowledge bravo is : ', state);\n  yield put( incrementDelta() );\n}\n","import { all } from 'redux-saga/effects';\n\nimport bucketSaga from './bucket';\n\nexport default function* rootSaga() {\n  yield all([\n    bucketSaga(),\n  ])\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware} from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport reducers from './reducers';\nimport rootSaga from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst createStoreWithMiddleware = applyMiddleware(sagaMiddleware)(createStore);\n\nexport const store = createStoreWithMiddleware(reducers, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nsagaMiddleware.run(rootSaga);\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}